[project]
authors = ["Mahesh Binzer-Panchal <mahesh.binzer-panchal@nbis.se>"]
channels = ["conda-forge", "bioconda"]
description = "Assembly template (TODO)"
name = "assembly-project-template"
platforms = ["linux-64", "osx-arm64"]
version = "1.0.0"

[dependencies]
# Empty because we don't want to install quarto or nextflow by default.

[tasks]
help = "cat README.md"
# Usage: e.g., 
#   OPTS='-e "ssh -J rackham"' pixi run fetch-curation
# Fetch qc folders locally (assumes you added repo from HPC as remote)
fetch-qc = { cmd = "rsync -av $OPTS \"$(git remote get-url $ORIGIN)/data/outputs/01_ebp-assembly-workflow/01_read_inspection\" \"data/outputs/01_ebp-assembly-workflow/\"", env = { OPTS = "", ORIGIN = "hpc" } }
# Fetch stats from assembly folders locally (assumes you added repo from HPC as remote)
fetch-stats = { cmd = "rsync -av --max-size=20M $OPTS \"$(git remote get-url $ORIGIN)/data/outputs/01_ebp-assembly-workflow/{03_assembly,04_contamination_screen,05_duplicate_purging,07_scaffolding}\" \"data/outputs/01_ebp-assembly-workflow/\"", env = { OPTS = "", ORIGIN = "hpc" } }
# Fetch manual curation folders locally (assumes you added repo from HPC as remote)
fetch-curation = { cmd = "rsync -av $OPTS \"$(git remote get-url $ORIGIN)/data/outputs/01_ebp-assembly-workflow/08_rapid_curation\" \"data/outputs/01_ebp-assembly-workflow/\"", env = { OPTS = "", ORIGIN = "hpc" } }
# Fetch report folder locally (assumes you added repo from HPC as remote)
fetch-report = { cmd = "rsync -av $OPTS \"$(git remote get-url $ORIGIN)/data/outputs/01_ebp-assembly-workflow/10_report\" \"data/outputs/01_ebp-assembly-workflow/\"", env = { OPTS = "", ORIGIN = "hpc" } }

# Template updates
git-link-template = "git remote add template https://github.com/NBISweden/assembly-project-template"
git-merge-template = "git fetch template && git merge template/main --allow-unrelated-histories"

[feature.quarto-env.dependencies]
quarto = "*"

[feature.quarto-env.tasks]
make-preview = { cmd = "quarto preview", cwd = "docs/gh-pages" }
make-gh-pages = { cmd = "quarto publish gh-pages --no-browser --no-prompt", cwd = "docs/gh-pages" }

[feature.nextflow-env.dependencies]
nextflow = "*"

[feature.nextflow-env.tasks]
# Run Assembly
assembly = { cmd = "run_nextflow.sh", cwd = "analyses/01_ebp-assembly-workflow/" }
# General
nextflow = "cd $INIT_CWD && ./run_nextflow.sh"
# Clean up
clean-work = "cd $INIT_CWD && nextflow clean -f -before $(nextflow log -q | tail -n 1) && find work/ -type d -empty -delete"
clean-nf = "cd $INIT_CWD && rm -rf .nextflow* work/"
clean-results = "cd $INIT_CWD && rm -rf results/"
clean-nftest = "cd $INIT_CWD && rm -rf .nf-test/"
clean-all = { depends-on = [ "clean-nf", "clean-results", "clean-nftest" ] }


[environments]
nextflow-env = ["nextflow-env"]
quarto-env = ["quarto-env"]
